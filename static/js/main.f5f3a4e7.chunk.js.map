{"version":3,"sources":["features/todoList/todoConstants.js","components/todo/NewTodoForm.jsx","features/todoList/todoActions.js","components/todo/TodoCard.jsx","components/todo/DisplayItems.jsx","components/todo/TodoPage.jsx","app/layout/App.js","features/sandbox/testAction.js","features/sandbox/testReducer.js","features/todoList/todoListReducer.jsx","app/api/sampleData.js","app/store/rootReducer.js","app/layout/theme.js","index.js","app/store/configureStore.js"],"names":["CREATE_TODO","UPDATE_TODO","DELETE_TODO","NewTodoForm","dispatch","useDispatch","useState","id","description","status","todo","setTodo","onSubmit","event","preventDefault","trim","type","payload","TextField","name","value","onChange","currentTarget","prevValue","cuid","label","variant","IconButton","color","size","TodoCard","eachTodo","isDisabled","setIsDisabled","handleChanges","keyCode","isFirstRender","setIsFirstRender","useEffect","Grid","container","Paper","elevation","style","backgroundColor","item","sm","onKeyDown","disabled","minHeight","onClick","itemId","DisplayItems","todoList","displayStatus","setDisplayStatus","handleDisplayStatus","filtered","filter","each","spacing","marginBottom","xs","Button","fullWidth","map","TodoPage","useSelector","state","Container","maxWidth","height","Typography","App","INCREMENT","DECREMENT","initialState","data","rootReducer","combineReducers","test","coffee","theme","createTheme","palette","background","default","primary","main","secondary","typography","fontFamily","h1","fontSize","p","overrides","MuiButton","root","textTransform","padding","MuiTypography","margin","store","createStore","devToolsEnhancer","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f5f3a4e7.chunk.js","sourcesContent":["export const CREATE_TODO = \"CREATE_TODO\";\r\n\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport const DELETE_TODO = \"DELETE_TODO\";","import React, { useState } from \"react\";\r\nimport cuid from \"cuid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createTodo } from \"../../features/todoList/todoActions\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\n\r\nexport default function NewTodoForm() {\r\n\r\n  //======================================================================//\r\n  // This is for react-redux\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  //======================================================================//\r\n  const [todo, setTodo] = useState({\r\n    id: \"\",\r\n    description: \"\",\r\n    status: \"active\",\r\n  });\r\n\r\n  //======================================================================//\r\n  // This function is to handle a new todo locally\r\n  const handleTodo = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    setTodo((prevValue) => ({\r\n      ...prevValue,\r\n      id: cuid(),\r\n      status: \"active\",\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //======================================================================//\r\n  //This function is to add todo to todoList redux when submit button clicked\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    (!!todo.description.trim()) && dispatch(createTodo(todo));\r\n    setTodo({description: \"\"});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={todo.description}\r\n          onChange={handleTodo}\r\n          label=\"todo\"\r\n          variant=\"outlined\"\r\n        />\r\n        <IconButton type=\"submit\" color=\"secondary\" size=\"medium\" ><AddCircleRoundedIcon /></IconButton>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { CREATE_TODO, DELETE_TODO, UPDATE_TODO } from \"./todoConstants\";\r\n\r\nexport function createTodo(data){\r\n    return {\r\n        type: CREATE_TODO,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport function updateTodo(data){\r\n    return{\r\n        type: UPDATE_TODO,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport function deleteTodo(id){\r\n    return{\r\n        type: DELETE_TODO,\r\n        payload: id,\r\n    }\r\n}","import { Grid, IconButton, Paper } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, updateTodo } from \"../../features/todoList/todoActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\n\r\nexport default function TodoCard({ eachTodo }) {\r\n  //======================================================================//\r\n  //Local state mapped from passed on from parent component\r\n  const [todo, setTodo] = useState(eachTodo);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  //======================================================================//\r\n  //This is for react redux\r\n  const dispatch = useDispatch();\r\n\r\n  //======================================================================//\r\n  //This function is to handle edit + status changes\r\n  const handleChanges = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    setTodo((prevValue) => ({ ...prevValue, [name]: value }));\r\n    //-----------------//\r\n    // If keypress is enter or it is change in status, call submit changes func\r\n    if (name === \"status\" || event.keyCode === 13) {\r\n      setIsDisabled(true);  \r\n    }\r\n  };\r\n\r\n    //This section is for useEffect to trigger dispatch when there are changes Todo and dispatch\r\n    //isFirstRender is to ensure that dispatch will not be called upon first render\r\n  const [ isFirstRender, setIsFirstRender] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender){\r\n      setIsFirstRender(false)\r\n    }else {\r\n      dispatch(updateTodo(todo));\r\n    }\r\n    }, [todo, dispatch]);\r\n\r\n  //======================================================================//\r\n  //This function is to handle delete\r\n  const handleDelete = (event) => {\r\n    const itemId = event.currentTarget.id;\r\n    dispatch(deleteTodo(itemId));\r\n  };\r\n\r\n  //======================================================================//\r\n  //   console.log(\"localtodo\", todo);\r\n\r\n  return (\r\n    <Grid container>\r\n    <Paper elevation={3} style={todo.status === \"active\" ? {} : {backgroundColor: \"#7FC8A9\"}}>\r\n    <Grid item sm={3}>\r\n      <textarea\r\n        id={todo.id}\r\n        name=\"description\"\r\n        onKeyDown={handleChanges}\r\n        onChange={handleChanges}\r\n        value={todo.description}\r\n        disabled={isDisabled}\r\n        style={{minHeight:\"100px\"}}\r\n      ></textarea>\r\n      </Grid>\r\n      <IconButton onClick={() => setIsDisabled(false)}><EditIcon /></IconButton>\r\n      <IconButton\r\n        id={todo.id}\r\n        name=\"status\"\r\n        value={todo.status === \"active\" ? \"completed\" : \"active\"}\r\n        onClick={handleChanges}\r\n      >\r\n        {todo.status === \"active\" ? <DoneIcon /> : <CheckCircleOutlineIcon/>}\r\n      </IconButton>\r\n      <IconButton id={todo.id} name=\"delete\" onClick={handleDelete}>\r\n        <BackspaceIcon />\r\n      </IconButton>\r\n    </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport TodoCard from \"./TodoCard\";\r\n\r\nexport default function DisplayItems({todoList}){\r\n\r\n  const [ displayStatus, setDisplayStatus ] = useState(\"active\");\r\n  \r\n   //======================================================================//\r\n  //This function is to set the display status active, completed or all\r\n  const handleDisplayStatus = (event) => {\r\n    setDisplayStatus(event.currentTarget.value);\r\n  }\r\n\r\n   //======================================================================//\r\n  //This is for filtering based on status selected\r\n  const filtered = todoList.filter( each => (displayStatus === \"all\")? each : each.status === displayStatus);\r\n\r\n    return(\r\n        <>\r\n        <Grid container spacing={3} style={{marginBottom:\"30px\"}}>\r\n          <Grid item xs={4}><Button value=\"active\" onClick={handleDisplayStatus} fullWidth >Active</Button></Grid>\r\n          <Grid item xs={4}><Button value=\"completed\" onClick={handleDisplayStatus} fullWidth >Completed</Button></Grid>\r\n          <Grid item xs={4}><Button value=\"all\" onClick={handleDisplayStatus} fullWidth >All</Button></Grid>\r\n        </Grid>\r\n        {/* Spacing 3x4=12px only on Grid, not grid item */}\r\n        <Grid container  spacing={3}>\r\n        {\r\n          filtered.map(each => <Grid item sm={4} key={each.id}><TodoCard  eachTodo={each}/></Grid>)\r\n        }\r\n        </Grid>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport DisplayItems from \"./DisplayItems\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\n\r\nexport default function TodoPage() {\r\n  const todoList = useSelector((state) => state.todoList.todo);\r\n  // console.log(\"todoList\", todoList);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\" style={{height:\"100vh\"}}>\r\n        <Typography variant=\"h1\">Todo-O App</Typography>\r\n        <NewTodoForm />\r\n        <DisplayItems todoList={todoList} />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","// import Sandbox from \"./todo/features/sandbox/Sandbox\";\nimport TodoPage from \"../../components/todo/TodoPage\";\n\nfunction App() {\n  return (\n    <>\n    <TodoPage />\n    {/* <Sandbox />  */}\n    </>\n  );\n}\n\nexport default App;\n","export const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\n\r\nexport function increment(amount) {\r\n    return {\r\n        type: INCREMENT,\r\n        payload: amount,\r\n    }\r\n}\r\n\r\nexport function decrement(amount){\r\n    return{\r\n        type: DECREMENT,\r\n        payload: amount,\r\n    }\r\n}","import { DECREMENT, INCREMENT } from \"./testAction\";\r\n\r\nconst initialState= {\r\n    data: 13,\r\n}\r\n\r\n//Reducer - 2 para: state and action(destructure: type and payload)\r\nexport default function testReducer(state=initialState,{type, payload}){\r\n    switch (type){\r\n        case INCREMENT: return{\r\n            ...state,\r\n            data: state.data + payload,\r\n        }\r\n        case DECREMENT: return{\r\n            ...state,\r\n            data: state.data - payload,\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { sampleData } from \"../../app/api/sampleData\";\r\nimport { CREATE_TODO, DELETE_TODO, UPDATE_TODO } from \"./todoConstants\";\r\n\r\nconst initialState = {\r\n    todo: sampleData\r\n}\r\n// console.log(\"initial state\", initialState);\r\n\r\n//Reducers 2 argument: state and action(destructured to type and payload)\r\nexport default function todoListReducer(state=initialState, {type, payload}){\r\n    switch (type){\r\n        case CREATE_TODO: return{\r\n            ...state,\r\n            todo: [...state.todo, payload],\r\n        }\r\n        case UPDATE_TODO: return{\r\n            ...state,\r\n            todo: [...state.todo.filter(each => each.id !== payload.id), payload]\r\n        }\r\n        case DELETE_TODO: return{\r\n            ...state,\r\n            todo: [...state.todo.filter(each => each.id !== payload)]\r\n        }\r\n        default: return state;\r\n    }\r\n}","import cuid from \"cuid\";\r\n\r\n\r\nexport const sampleData = [\r\n    {\r\n        id: cuid(),\r\n        description: \"Buy Milk 🥛\",\r\n        status: \"active\"\r\n    },\r\n    {\r\n        id: cuid(),\r\n        description: \"Buy Cat 🙀\",\r\n        status: \"completed\"\r\n    }\r\n\r\n];\r\n","import { combineReducers } from \"redux\";\r\nimport testReducer from \"../../features/sandbox/testReducer\";\r\nimport todoListReducer from \"../../features/todoList/todoListReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: todoListReducer,\r\n    test: testReducer,\r\n});\r\n\r\nexport default rootReducer;","import {createTheme} from \"@material-ui/core/styles\";\r\n\r\nconst peach = \"#FDEFEF\";\r\nconst pink = \"#F4DFD0\";\r\nconst biege = \"#DAD0C2\";\r\nconst coffee = \"#CDBBA7\";\r\n\r\n\r\nexport const theme = createTheme({\r\n    palette: {\r\n        background: {\r\n            default:`${peach}`\r\n        },\r\n        primary: {\r\n            main: `${biege}`\r\n        },\r\n        secondary: {\r\n            main: `${coffee}`\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: \"Pacifico\",\r\n        h1: {\r\n            fontSize: \"6.5rem\",\r\n            color:`${coffee}`,\r\n        },\r\n        p: {\r\n            fontFamily: \"Merriweather\",\r\n            \r\n        },\r\n    },\r\n\r\n    spacing: 5,\r\n\r\n    overrides: {\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: \"none\",\r\n                padding: \"10px\",\r\n                backgroundColor: `${pink}`\r\n\r\n            }\r\n        },\r\n        MuiTypography:{\r\n            root: {\r\n                margin: \"50px auto\",\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/layout/App\";\nimport configureStore from \"./app/store/configureStore\";\nimport \"./app/layout/styles.css\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./app/layout/theme\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nexport default function configureStore(){\r\n    return createStore(rootReducer, devToolsEnhancer());\r\n}"],"sourceRoot":""}